#!/bin/bash

############
# Get Parallels virtual machines from all users
#
# This script will get the virtual machines for all users in Parallels Desktop.
# The example of output: Windows 11, Ubuntu Linux, macOS Sequoia
#
############

get_host_users() {
  dscl . list /Users | grep -v "^_" | grep '\S'
}

function get_license_state() {
  is_installed=$(which prlsrvctl)
  if [[ $is_installed ]]; then
    license_output=$(prlsrvctl info | grep "License:")

    if [[ -n "$license_output" ]]; then
      license_state=$(echo "$license_output" | awk -F "state='" '{print $2}' | awk -F "'" '{print $1}')

      if [[ "$license_state" != "valid" ]]; then
        echo "<result>$license_state</result>"
        exit 1
      fi
    else
      echo "<result>No License found</result>"
      exit 1
    fi
  else
    echo "<result>Parallels is not installed</result>"
    exit 1
  fi
}

get_license_state

# Create an empty temporary file
temp_file=$(mktemp /tmp/uuids.XXXXXX)
temp_names=$(mktemp /tmp/names.XXXXXX)

for user in $(get_host_users); do
  id=""
  [ -n "${user}" ] && [ -e "/Users/${user}" ] || continue

  input_data=$(sudo -u $user prlctl list -a)

  echo "$input_data" | awk '{gsub(/[{}]/, "", $1); print $1}' | while read uuid; do
    if ! grep -q "$uuid" "$temp_file"; then
      if [ "$uuid" != "UUID" ]; then
        echo "$uuid" >>"$temp_file"
        machineName=$(echo "$input_data" | awk -v filter="$uuid" '$1 ~ filter { $1=$2=$3=""; gsub(/^ */,
""); print }')
        echo "$machineName" >>"$temp_names"
      fi
    fi
  done
done

lines=$(cat "$temp_names" | paste -s -d "," - | sed 's/,/, /g' | sed 's/, $//')
rm "$temp_file"  # Cleanup the temporary file
rm "$temp_names" # Cleanup the temporary file

if [[ $lines ]]; then
  echo "<result>$lines</result>"
else
  echo "<result>No Machines found</result>"
fi

exit 0

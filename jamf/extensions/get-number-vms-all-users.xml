#!/bin/bash

############
# Get the number of virtual machines from all users
#
# This script will get the number of virtual machines from all users in Parallels Desktop
# Output is a single number.
#
############

function get_license_state() {
  is_installed=$(which prlsrvctl)
  if [[ $is_installed ]]; then
    license_output=$(prlsrvctl info | grep "License:")

    if [[ -n "$license_output" ]]; then
      license_state=$(echo "$license_output" | awk -F "state='" '{print $2}' | awk -F "'" '{print $1}')

      if [[ "$license_state" != "valid" ]]; then
        echo "<result>$license_state</result>"
        exit 1
      fi
    else
      echo "<result>No License found</result>"
      exit 1
    fi
  else
    echo "<result>Parallels is not installed</result>"
    exit 1
  fi
}

get_license_state

get_host_users() {
  dscl . list /Users | grep -v "^_" | grep '\S'
}

# Create temporary file for UUIDs
temp_file=$(mktemp /tmp/uuids.XXXXXX)

for user in $(get_host_users); do
  [ -n "${user}" ] && [ -e "/Users/${user}" ] || continue

  input_data=$(sudo -u $user prlctl list -a)

  # Process the prlctl output line by line to extract UUID only
  echo "$input_data" | awk 'NR>1 {
    uuid=$1
    gsub(/[{}]/, "", uuid)
    print uuid
  }' | while read -r uuid; do
    # Skip header line or empty UUIDs
    if [[ -z "$uuid" || "$uuid" == "UUID" ]]; then
      continue
    fi
    
    # Only add UUID if we haven't seen it before
    if ! grep -q "$uuid" "$temp_file"; then
      echo "$uuid" >> "$temp_file"
    fi
  done
done

# Count unique VMs
user_count=$(wc -l "$temp_file" | awk '{$1=$1};1' | cut -d' ' -f1)

# Cleanup the temporary file
rm "$temp_file"

if [[ $user_count -gt 0 ]]; then
  echo "<result>$user_count</result>"
else
  echo "<result>0</result>"
fi

exit 0
